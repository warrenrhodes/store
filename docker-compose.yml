version: "3.8"

services:
  mongo:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mongodb-replicaset
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: naturegift
      MONGO_INITDB_ROOT_PASSWORD: naturegift
      MONGO_INITDB_DATABASE: naturegift-store
    ports:
      - 27017:27017
    command: --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all --port 27017
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'127.0.0.1:27017'}]}) }" | mongosh --port 27017 -u naturegift -p naturegift --authenticationDatabase admin naturegift-store
      interval: 5s
      timeout: 15s
      start_period: 15s
      retries: 10
    volumes:
      - mongodb_data:/data/db
    networks:
      - nature-gift-network

  store:
    build:
      context: .
      dockerfile: ./nature_gift_store/Dockerfile
    container_name: nature-gift-store
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://naturegift:naturegift@mongo:27017/naturegift-store?replicaSet=rs0&authSource=admin
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - nature-gift-network

  admin:
    build:
      context: .
      dockerfile: ./nature_gift_admin/Dockerfile
    container_name: nature-gift-admin
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://naturegift:naturegift@mongo:27017/naturegift-store?replicaSet=rs0&authSource=admin
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - nature-gift-network

volumes:
  mongodb_data: {}

networks:
  nature-gift-network:
    driver: bridge
